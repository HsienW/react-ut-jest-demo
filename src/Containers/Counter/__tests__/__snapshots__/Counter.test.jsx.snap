// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing Counter should be possible to activate button with Spacebar 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Counter {
      "_reactInternalFiber": FiberNode {
        "_debugID": 54,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 53,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <p>
                      Count: 0
                    </p>
                    <br />
                    <button
                      class="add"
                      type="button"
                    >
                      + 1
                    </button>
                    <button
                      id="add-ten-button"
                    >
                      + 10
                    </button>
                    <button
                      class="decrement"
                    >
                      - 1
                    </button>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <p>
                    Count: 0
                  </p>
                  <br />
                  <button
                    class="add"
                    type="button"
                  >
                    + 1
                  </button>
                  <button
                    id="add-ten-button"
                  >
                    + 10
                  </button>
                  <button
                    class="decrement"
                  >
                    - 1
                  </button>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 55,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "Count: 0",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "Count: 0",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 58,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "+ 1",
                  "className": "add",
                  "onClick": [Function],
                  "type": "button",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "+ 1",
                  "className": "add",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 59,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "+ 10",
                    "id": "add-ten-button",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "+ 10",
                    "id": "add-ten-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 60,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 4,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "- 1",
                      "className": "decrement",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "- 1",
                      "className": "decrement",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button
                      class="decrement"
                    >
                      - 1
                    </button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    id="add-ten-button"
                  >
                    + 10
                  </button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <button
                  class="add"
                  type="button"
                >
                  + 1
                </button>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "button",
                "updateQueue": null,
              },
              "stateNode": <br />,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "br",
              "updateQueue": null,
            },
            "stateNode": <p>
              Count: 0
            </p>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "p",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <p>
                Count: 0
              </p>,
              <br />,
              <button
                className="add"
                onClick={[Function]}
                type="button"
              >
                + 1
              </button>,
              <button
                id="add-ten-button"
                onClick={[Function]}
              >
                + 10
              </button>,
              <button
                className="decrement"
                onClick={[Function]}
              >
                - 1
              </button>,
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <p>
                Count: 0
              </p>,
              <br />,
              <button
                className="add"
                onClick={[Function]}
                type="button"
              >
                + 1
              </button>,
              <button
                id="add-ten-button"
                onClick={[Function]}
              >
                + 10
              </button>,
              <button
                className="decrement"
                onClick={[Function]}
              >
                - 1
              </button>,
            ],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div>
            <p>
              Count: 0
            </p>
            <br />
            <button
              class="add"
              type="button"
            >
              + 1
            </button>
            <button
              id="add-ten-button"
            >
              + 10
            </button>
            <button
              class="decrement"
            >
              - 1
            </button>
          </div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "count": 0,
          "list": Array [
            "one",
            "two",
          ],
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 53,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <p>
                      Count: 0
                    </p>
                    <br />
                    <button
                      class="add"
                      type="button"
                    >
                      + 1
                    </button>
                    <button
                      id="add-ten-button"
                    >
                      + 10
                    </button>
                    <button
                      class="decrement"
                    >
                      - 1
                    </button>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <p>
                    Count: 0
                  </p>
                  <br />
                  <button
                    class="add"
                    type="button"
                  >
                    + 1
                  </button>
                  <button
                    id="add-ten-button"
                  >
                    + 10
                  </button>
                  <button
                    class="decrement"
                  >
                    - 1
                  </button>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "addCount": [Function],
      "addTenCount": [Function],
      "context": Object {},
      "decrement": [Function],
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "count": 0,
        "list": Array [
          "one",
          "two",
        ],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <p>
          Count: 0
        </p>
        <br />
        <button
          class="add"
          type="button"
        >
          + 1
        </button>
        <button
          id="add-ten-button"
        >
          + 10
        </button>
        <button
          class="decrement"
        >
          - 1
        </button>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Count: 0
          </p>,
          <br />,
          <button
            className="add"
            onClick={[Function]}
            type="button"
          >
            + 1
          </button>,
          <button
            id="add-ten-button"
            onClick={[Function]}
          >
            + 10
          </button>,
          <button
            className="decrement"
            onClick={[Function]}
          >
            - 1
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <p>
            Count: 0
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Count: 0",
          },
          "ref": null,
          "rendered": Array [
            "Count: 0",
          ],
          "type": "p",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <button
            class="add"
            type="button"
          >
            + 1
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+ 1",
            "className": "add",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            "+ 1",
          ],
          "type": "button",
        },
        Object {
          "instance": <button
            id="add-ten-button"
          >
            + 10
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+ 10",
            "id": "add-ten-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "+ 10",
          ],
          "type": "button",
        },
        Object {
          "instance": <button
            class="decrement"
          >
            - 1
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "- 1",
            "className": "decrement",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "- 1",
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Counter {
        "_reactInternalFiber": FiberNode {
          "_debugID": 54,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 53,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <p>
                        Count: 0
                      </p>
                      <br />
                      <button
                        class="add"
                        type="button"
                      >
                        + 1
                      </button>
                      <button
                        id="add-ten-button"
                      >
                        + 10
                      </button>
                      <button
                        class="decrement"
                      >
                        - 1
                      </button>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <p>
                      Count: 0
                    </p>
                    <br />
                    <button
                      class="add"
                      type="button"
                    >
                      + 1
                    </button>
                    <button
                      id="add-ten-button"
                    >
                      + 10
                    </button>
                    <button
                      class="decrement"
                    >
                      - 1
                    </button>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 55,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Count: 0",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Count: 0",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 57,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 58,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "+ 1",
                    "className": "add",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "+ 1",
                    "className": "add",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 59,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "+ 10",
                      "id": "add-ten-button",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "+ 10",
                      "id": "add-ten-button",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 60,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 4,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "- 1",
                        "className": "decrement",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "- 1",
                        "className": "decrement",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button
                        class="decrement"
                      >
                        - 1
                      </button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <button
                      id="add-ten-button"
                    >
                      + 10
                    </button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    class="add"
                    type="button"
                  >
                    + 1
                  </button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <br />,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "br",
                "updateQueue": null,
              },
              "stateNode": <p>
                Count: 0
              </p>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "p",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <p>
                  Count: 0
                </p>,
                <br />,
                <button
                  className="add"
                  onClick={[Function]}
                  type="button"
                >
                  + 1
                </button>,
                <button
                  id="add-ten-button"
                  onClick={[Function]}
                >
                  + 10
                </button>,
                <button
                  className="decrement"
                  onClick={[Function]}
                >
                  - 1
                </button>,
              ],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <p>
                  Count: 0
                </p>,
                <br />,
                <button
                  className="add"
                  onClick={[Function]}
                  type="button"
                >
                  + 1
                </button>,
                <button
                  id="add-ten-button"
                  onClick={[Function]}
                >
                  + 10
                </button>,
                <button
                  className="decrement"
                  onClick={[Function]}
                >
                  - 1
                </button>,
              ],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div>
              <p>
                Count: 0
              </p>
              <br />
              <button
                class="add"
                type="button"
              >
                + 1
              </button>
              <button
                id="add-ten-button"
              >
                + 10
              </button>
              <button
                class="decrement"
              >
                - 1
              </button>
            </div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "count": 0,
            "list": Array [
              "one",
              "two",
            ],
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 53,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <p>
                        Count: 0
                      </p>
                      <br />
                      <button
                        class="add"
                        type="button"
                      >
                        + 1
                      </button>
                      <button
                        id="add-ten-button"
                      >
                        + 10
                      </button>
                      <button
                        class="decrement"
                      >
                        - 1
                      </button>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <p>
                      Count: 0
                    </p>
                    <br />
                    <button
                      class="add"
                      type="button"
                    >
                      + 1
                    </button>
                    <button
                      id="add-ten-button"
                    >
                      + 10
                    </button>
                    <button
                      class="decrement"
                    >
                      - 1
                    </button>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "addCount": [Function],
        "addTenCount": [Function],
        "context": Object {},
        "decrement": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "count": 0,
          "list": Array [
            "one",
            "two",
          ],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <p>
            Count: 0
          </p>
          <br />
          <button
            class="add"
            type="button"
          >
            + 1
          </button>
          <button
            id="add-ten-button"
          >
            + 10
          </button>
          <button
            class="decrement"
          >
            - 1
          </button>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Count: 0
            </p>,
            <br />,
            <button
              className="add"
              onClick={[Function]}
              type="button"
            >
              + 1
            </button>,
            <button
              id="add-ten-button"
              onClick={[Function]}
            >
              + 10
            </button>,
            <button
              className="decrement"
              onClick={[Function]}
            >
              - 1
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <p>
              Count: 0
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Count: 0",
            },
            "ref": null,
            "rendered": Array [
              "Count: 0",
            ],
            "type": "p",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <button
              class="add"
              type="button"
            >
              + 1
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "+ 1",
              "className": "add",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              "+ 1",
            ],
            "type": "button",
          },
          Object {
            "instance": <button
              id="add-ten-button"
            >
              + 10
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "+ 10",
              "id": "add-ten-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "+ 10",
            ],
            "type": "button",
          },
          Object {
            "instance": <button
              class="decrement"
            >
              - 1
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "- 1",
              "className": "decrement",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "- 1",
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <Counter />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`testing Counter should created counter 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Counter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          Count: 0
        </p>,
        <br />,
        <button
          className="add"
          onClick={[Function]}
          type="button"
        >
          + 1
        </button>,
        <button
          className="decrement"
          onClick={[Function]}
        >
          - 1
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Count: 0",
        },
        "ref": null,
        "rendered": "Count: 0",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "+ 1",
          "className": "add",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "+ 1",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "- 1",
          "className": "decrement",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "- 1",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Count: 0
          </p>,
          <br />,
          <button
            className="add"
            onClick={[Function]}
            type="button"
          >
            + 1
          </button>,
          <button
            className="decrement"
            onClick={[Function]}
          >
            - 1
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Count: 0",
          },
          "ref": null,
          "rendered": "Count: 0",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+ 1",
            "className": "add",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "+ 1",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "- 1",
            "className": "decrement",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "- 1",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`testing Counter should render banner text correctly with given strings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Counter
    list={
      Array [
        "one",
        "two",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          Count: 0
        </p>,
        <br />,
        <button
          className="add"
          onClick={[Function]}
          type="button"
        >
          + 1
        </button>,
        <button
          className="decrement"
          onClick={[Function]}
        >
          - 1
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Count: 0",
        },
        "ref": null,
        "rendered": "Count: 0",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "+ 1",
          "className": "add",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "+ 1",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "- 1",
          "className": "decrement",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "- 1",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Count: 0
          </p>,
          <br />,
          <button
            className="add"
            onClick={[Function]}
            type="button"
          >
            + 1
          </button>,
          <button
            className="decrement"
            onClick={[Function]}
          >
            - 1
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Count: 0",
          },
          "ref": null,
          "rendered": "Count: 0",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+ 1",
            "className": "add",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "+ 1",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "- 1",
            "className": "decrement",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "- 1",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
